@model Register

@{
	Bundles.AddPageData("Url", new
	{
		validateUsername = Url.Account().ValidateUsername()
	}, "head");
}
@section Title {
	Create an Account
}

<div class="page-header">
	<h2>Create an Account</h2>
</div>

@using(Html.BeginForm()) {
	@Html.ValidationSummary(false)
	<div class="form-horizontal row">
		<fieldset class="col-md-6">
			@Html.HiddenFor(x => x.ReturnUrl)
			<div class="form-group">
				@Html.LabelFor(x => x.Username, new { @class = "col-md-4 control-label" })
				<div class="col-md-8">
					@Html.TextBoxWithMaxLengthFor(x => x.Username, new { @class = "form-control" })
					<span class="form-control-static username-valid hide" title="Username is valid"><i class="icon-ok"></i></span>
					<span class="form-control-static username-invalid hide" title="Username is not available"><i class="icon-remove"></i></span>
					@Html.ValidationMessageFor(x => x.Username)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(x => x.Name, new { @class = "col-md-4 control-label" })
				<div class="col-md-8">
					@Html.TextBoxWithMaxLengthFor(x => x.Name, new { @class = "form-control" })
					@Html.ValidationMessageFor(x => x.Name)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(x => x.Email, new { @class = "col-md-4 control-label" })
				<div class="col-md-8">
					@Html.TextBoxWithMaxLengthFor(x => x.Email, new { @class = "form-control" })
					@Html.ValidationMessageFor(x => x.Email)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(x => x.Password, new { @class = "col-md-4 control-label" })
				<div class="col-md-8">
					@Html.PasswordWithMaxLengthFor(x => x.Password, new { @class = "form-control" })
					@Html.ValidationMessageFor(x => x.Password)
				</div>
			</div>
			<div class="form-group">
				<div class="col-md-8 col-md-offset-4">
					<button type="submit" class="btn btn-primary">Create New Account</button>
				</div>
			</div>
			<div class="form-group">
				<div class="col-md-8 col-md-offset-4 form-control-static">
					Already have an account? <a href="@Url.Account().Login()">Login</a>
				</div>
			</div>
		</fieldset>
	</div>
}
